# This workflows will upload a Python Package using Poetry when a release is created

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3

      # If you wanted to use multiple Python versions, you'd have specify a matrix in the job and
      # reference the matrixe python version here.
      - name: Set up Python 3.8
        uses: actions/setup-python@v3.1.4
        with:
          python-version: 3.8

      # Cache the installation of Poetry itself, e.g. the next step. This prevents the workflow
      # from installing Poetry every time, which can be slow. Note the use of the Poetry version
      # number in the cache key, and the "-0" suffix: this allows you to invalidate the cache
      # manually if/when you want to upgrade Poetry, or if something goes wrong. This could be
      # mildly cleaner by using an environment variable, but I don't really care.
      - name: cache poetry install
        uses: actions/cache@v3.3.1
        with:
          path: ~/.local
          key: poetry-1.1.12-0

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: build and Publish python poetry package
        uses: JRubics/poetry-publish@v1.17
        with:
          pypi_token: "${{ secrets.GITHUB_TOKEN }}"
